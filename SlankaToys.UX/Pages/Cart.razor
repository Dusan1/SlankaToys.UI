@using System
@using SlankaToys.UX.Services
@inject HttpClient Http
@inject ToastService toastService

@page "/cart/user/{userId:int}"
@if (cartModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>@cartModel.Date</h3>
    <h3>Total: <strong>$ @cartModel.Items.Sum(i => i.TotalPrice)</strong></h3>

        <div class="container">
        @foreach (var item in cartModel.Items)
        {
            <div class="row">
            <div class=col-md-12>
                <div class=col-md-3>
                        <div class="product-box">
                            <img src="/images/@item.ImageFileName" alt="Image">
                        </div>
                </div>
                <div class=col-md-3>
                        <h3><a>@item.ProductName (@item.Quantity)</a></h3>
                </div>
                <div class=col-md-3>
                        <h3><a>(@item.Quantity)</a></h3>
                </div>
                <div class=col-md-3>
                        <p>Price : <strong>$ @item.Price</strong>  </p>
                        <p>Total Price : <strong>$ @item.TotalPrice </strong>  </p>
                </div>
                    
            </div>
            </div>
        }

        </div>
}

@code {
    [Parameter]
    public int UserId { get; set; }

    private CartModel cartModel;

    protected override async Task OnInitializedAsync()
    {
        cartModel = await Http.GetFromJsonAsync<CartModel>($"cart/user/{UserId}");
    }


    public class CartItemModel
    {
        public string ProductName { get; set; }
        public decimal Price { get; set; }

        public decimal Quantity { get; set; }

        public decimal TotalPrice => Price * Quantity;

        public string ImageFileName { get; set; }
    }

    public class CartModel{
        public DateTime Date { get; set; }
        public List<CartItemModel> Items { get; set; }
    }
}
